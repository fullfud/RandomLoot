# Название вашего воркфлоу, оно будет отображаться в интерфейсе GitHub
name: Сборка мода (ручной запуск)

# Секция on определяет, когда будет запускаться этот воркфлоу
on:
  # workflow_dispatch - это то, что добавляет кнопку "Run workflow" в интерфейсе GitHub Actions.
  # Это и есть "ручной запуск".
  workflow_dispatch:

  # Также хорошей практикой является запуск сборки при изменениях в ключевых ветках,
  # чтобы автоматически проверять, что проект не сломан.
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

# jobs - это задачи, которые будут выполняться
jobs:
  # Мы назовем нашу основную задачу "build"
  build:
    # Запускать будем на последней версии Ubuntu (стандарт для GitHub Actions)
    runs-on: ubuntu-latest

    # steps - это шаги, которые последовательно выполняются в рамках задачи
    steps:
      # Шаг 1: Клонирование вашего репозитория
      # Используем готовый экшен actions/checkout
      - name: 1. Клонирование репозитория
        uses: actions/checkout@v4

      # Шаг 2: Установка нужной версии Java
      # Для Minecraft 1.20.1 и свежих версий Forge требуется Java 17
      - name: 2. Установка Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # Используем популярный и надежный дистрибутив OpenJDK
          java-version: '17'

      # Шаг 3: Настройка кэширования зависимостей Gradle
      # Это самый важный шаг для ускорения. Он сохраняет скачанные библиотеки.
      - name: 3. Кэширование зависимостей Gradle
        uses: actions/cache@v4
        with:
          # Путь к папкам, которые нужно кэшировать
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          # Ключ кэша. Если файлы build.gradle изменятся, ключ станет другим, и кэш будет создан заново.
          # Это гарантирует, что у вас всегда будут правильные зависимости.
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          # Ключ для восстановления, если точное совпадение не найдено
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Шаг 4: Предоставление прав на исполнение для Gradle Wrapper
      # В системах Linux/macOS нужно явно разрешить запуск файла gradlew
      - name: 4. Выдача прав на исполнение для gradlew
        run: chmod +x gradlew

      # Шаг 5: Сборка проекта с помощью Gradle
      # Это основная команда, которая компилирует ваш мод
      - name: 5. Сборка проекта
        run: ./gradlew build --no-daemon

      # Шаг 6: Загрузка артефакта (собранного .jar файла)
      # После успешной сборки мы сохраняем результат, чтобы его можно было скачать.
      - name: 6. Загрузка артефакта сборки
        uses: actions/upload-artifact@v4
        with:
          # Название для вашего артефакта
          name: Mod-JAR
          # Путь к файлу, который нужно загрузить.
          # Он обычно находится в build/libs/. Wildcard (*) используется, чтобы не указывать точную версию.
          path: build/libs/*.jar
